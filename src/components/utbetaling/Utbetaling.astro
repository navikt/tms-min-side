---
import pino from "pino-http";
import { getAudience, getOboToken } from "../../utils/server/token";
import type { Language } from "../../language/language";
import IngenUtbetaling from "./ingen/IngenUtbetaling.astro";
import ClientError from "../client-error/ClientError";
import { utbetalingsoversiktApiUrl } from "./utbetalingUrls";
import type { Utbetaling } from "./utbetalingTypes";
import { fetchData } from "../../utils/server/fetch";
import styles from "./Utbetaling.module.css";
import PersonalContentLogger from "@components/legacy/PersonalContentLogger";
import SeAlle from "./se-alle/SeAlle.astro";
import EnkelUtbetaling from "./enkel-utbetaling/EnkelUtbetaling.astro";
import UtbetalingList from "./utbetaling-list/UtbetalingList.astro";

interface Props {
  language: Language;
}

const audience = getAudience("tms-utbetalingsoversikt-api");
const oboToken = await getOboToken(Astro.locals.token, audience);
const logger = pino().logger;

let data: Utbetaling = { hasKommende: false, hasUtbetaling: false, sisteUtbetaling: null, kommende: null };
let isError = false;

try {
  data = await fetchData(oboToken, utbetalingsoversiktApiUrl);
} catch (error: any) {
  logger.error("Fetching utbetaling failed.", error.message);
  isError = true;
}

const { language } = Astro.props;

const isKommende = data.kommende && !data.sisteUtbetaling ? true : false;
---

{isError && <ClientError client:only="react" />}
<div class={styles.container}>
  {!data.kommende && !data.sisteUtbetaling && <IngenUtbetaling language={language} />}
  {
    data.kommende && !data.sisteUtbetaling && (
      <EnkelUtbetaling utbetaling={data.kommende} language={language} utbetalingType="kommende" />
    )
  }
  {
    data.sisteUtbetaling && !data.kommende && (
      <EnkelUtbetaling utbetaling={data.sisteUtbetaling} language={language} utbetalingType="tidligere" />
    )
  }
  {
    data.sisteUtbetaling && data.kommende && (
      <UtbetalingList kommende={data.kommende} language={language} tidligere={data.sisteUtbetaling} />
    )
  }
  <SeAlle language={language} isKommende={isKommende} />

  <PersonalContentLogger
    event={"utbetaling"}
    value={data.hasUtbetaling || data.hasKommende ? true : false}
    client:only="react"
  />
</div>
